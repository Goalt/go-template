// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package mock_main is a generated GoMock package.
package mock_main

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MocksimpleInterface is a mock of simpleInterface interface.
type MocksimpleInterface struct {
	ctrl     *gomock.Controller
	recorder *MocksimpleInterfaceMockRecorder
}

// MocksimpleInterfaceMockRecorder is the mock recorder for MocksimpleInterface.
type MocksimpleInterfaceMockRecorder struct {
	mock *MocksimpleInterface
}

// NewMocksimpleInterface creates a new mock instance.
func NewMocksimpleInterface(ctrl *gomock.Controller) *MocksimpleInterface {
	mock := &MocksimpleInterface{ctrl: ctrl}
	mock.recorder = &MocksimpleInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocksimpleInterface) EXPECT() *MocksimpleInterfaceMockRecorder {
	return m.recorder
}

// SimpleInterfaceFunc mocks base method.
func (m *MocksimpleInterface) SimpleInterfaceFunc(arg0 int) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SimpleInterfaceFunc", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// SimpleInterfaceFunc indicates an expected call of SimpleInterfaceFunc.
func (mr *MocksimpleInterfaceMockRecorder) SimpleInterfaceFunc(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SimpleInterfaceFunc", reflect.TypeOf((*MocksimpleInterface)(nil).SimpleInterfaceFunc), arg0)
}
